generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role Role @default(USER)
  products Product[]
  orders Order[]
  refreshToken String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())
  name String
  description String
  price Float
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int
  photos Photo[]
  category Category @relation(fields: [categoryId], references: [id])
  orderItems OrderItem[]
  categoryId Int
  isAvailable Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id Int @id @default(autoincrement())
  url String
  product Product @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
}

model Category {
  id Int @id @default(autoincrement())
  name String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  orderItems OrderItem[]
  totalPrice Float
  status StatusPedido @default(EM_PREPARO)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id Int @id @default(autoincrement())
  orderId Int
  order Order @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int @default(1)
  subtotal Float @default(0)
  price Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum StatusPedido {
  EM_PREPARO
  PRONTO
  PARA_RETIRAR
  RETIRADO
  EM_TRANSPORTE
  ENTREGUE
  CANCELADO
}
